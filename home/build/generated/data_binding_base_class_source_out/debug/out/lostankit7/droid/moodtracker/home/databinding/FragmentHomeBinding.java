// Generated by view binder compiler. Do not edit!
package lostankit7.droid.moodtracker.home.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.bottomappbar.BottomAppBar;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import lostankit7.droid.moodtracker.home.R;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomAppBar bottomAppBar;

  @NonNull
  public final CoordinatorLayout bottomLayout;

  @NonNull
  public final BottomNavigationView bottomNavView;

  @NonNull
  public final FloatingActionButton fabAddUserEntry;

  @NonNull
  public final View fragmentBottomGuide;

  @NonNull
  public final FragmentContainerView homeNavHostFragment;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomAppBar bottomAppBar, @NonNull CoordinatorLayout bottomLayout,
      @NonNull BottomNavigationView bottomNavView, @NonNull FloatingActionButton fabAddUserEntry,
      @NonNull View fragmentBottomGuide, @NonNull FragmentContainerView homeNavHostFragment) {
    this.rootView = rootView;
    this.bottomAppBar = bottomAppBar;
    this.bottomLayout = bottomLayout;
    this.bottomNavView = bottomNavView;
    this.fabAddUserEntry = fabAddUserEntry;
    this.fragmentBottomGuide = fragmentBottomGuide;
    this.homeNavHostFragment = homeNavHostFragment;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_app_bar;
      BottomAppBar bottomAppBar = ViewBindings.findChildViewById(rootView, id);
      if (bottomAppBar == null) {
        break missingId;
      }

      id = R.id.bottomLayout;
      CoordinatorLayout bottomLayout = ViewBindings.findChildViewById(rootView, id);
      if (bottomLayout == null) {
        break missingId;
      }

      id = R.id.bottom_nav_view;
      BottomNavigationView bottomNavView = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavView == null) {
        break missingId;
      }

      id = R.id.fab_add_user_entry;
      FloatingActionButton fabAddUserEntry = ViewBindings.findChildViewById(rootView, id);
      if (fabAddUserEntry == null) {
        break missingId;
      }

      id = R.id.fragmentBottomGuide;
      View fragmentBottomGuide = ViewBindings.findChildViewById(rootView, id);
      if (fragmentBottomGuide == null) {
        break missingId;
      }

      id = R.id.home_nav_host_fragment;
      FragmentContainerView homeNavHostFragment = ViewBindings.findChildViewById(rootView, id);
      if (homeNavHostFragment == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, bottomAppBar, bottomLayout,
          bottomNavView, fabAddUserEntry, fragmentBottomGuide, homeNavHostFragment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
